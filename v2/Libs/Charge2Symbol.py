from numpy import pi
ELEMENTS = ['X',  # Ghost
    'H' , 'He', 'Li', 'Be', 'B' , 'C' , 'N' , 'O' , 'F' , 'Ne',
    'Na', 'Mg', 'Al', 'Si', 'P' , 'S' , 'Cl', 'Ar', 'K' , 'Ca',
    'Sc', 'Ti', 'V' , 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn',
    'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y' , 'Zr',
    'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn',
    'Sb', 'Te', 'I' , 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd',
    'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb',
    'Lu', 'Hf', 'Ta', 'W' , 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg',
    'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th',
    'Pa', 'U' , 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm',
    'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds',
    'Rg', 'Cn', 'Nh', 'Fl', 'Mc', 'Lv', 'Ts', 'Og',
]

NUC = dict(((x,i) for i,x in enumerate(ELEMENTS)))
NUC.update((x.upper(),i) for i,x in enumerate(ELEMENTS))
NUC['GHOST'] = 0
ELEMENTS_PROTON = NUC

def _rm_digit(symb):
    if symb.isalpha():
        return symb
    else:
        return ''.join([i for i in symb if i.isalpha()])
def charge(symb_or_chg):
    if isinstance(symb_or_chg, (str)):
        a = symb_or_chg.upper()
        if ('GHOST' in a or ('X' in a and 'XE' not in a)):
            return 0
        else:
            return ELEMENTS_PROTON[str(_rm_digit(a))]
    else:
        return symb_or_chg

ang2bohr=1.8897261246
bohr2ang=.5291772109
centimeter2bohr=1.8897261246e+8
plankAU=2*pi
lightspeedAU=137.036
dalton_to_au=  1.660e-27 / 9.109e-31

def to_cm(k,Mu):
    return (k/Mu)**0.5/plankAU/lightspeedAU*centimeter2bohr

atomic_masses = [ 0,  1.00794075,  4.00260193,  6.94003660,  9.01218307,
       10.81102805, 12.01073590, 14.00670321, 15.99940492,
       18.99840316, 20.18004638, 22.98976928, 24.30505162,
       26.98153853, 28.08549871, 30.97376200, 32.06478741,
       35.45293758, 39.94779856, 39.09830091, 40.07802251,
       44.95590828, 47.86674496, 50.94146504, 51.99613176,
       54.93804391, 55.84514443, 58.93319429, 58.69334711,
       63.54603995, 65.37778253, 69.72306607, 72.62755016,
       74.92159457, 78.95938856, 79.90352778, 83.79800000,
       85.46766360, 87.61664447, 88.90584030, 91.22364160,
       92.90637300, 95.95978854, 97.90721240,101.06494014,
      102.90549800,106.41532751,107.86814963,112.41155782,
      114.81808663,118.71011259,121.75978367,127.60312648,
      126.90447190,131.29276145,132.90545196,137.32689163,
      138.90546887,140.11573074,140.90765760,144.24159603,
      144.91275590,150.36635571,151.96437813,157.25213065,
      158.92535470,162.49947282,164.93032880,167.25908265,
      168.93421790,173.05415017,174.96681496,178.48497872,
      180.94787564,183.84177755,186.20670455,190.22485963,
      192.21605165,195.08445686,196.96656879,200.59916703,
      204.38341284,207.21690806,208.98039910,208.98243080,
      209.98714790,222.01757820,223.01973600,226.02541030,
      227.02775230,232.03805580,231.03588420,238.02891046,
      237.04817360,244.06420530,243.06138130,247.07035410,
      247.07030730,251.07958860,252.08298000,257.09510610,
      258.09843150,259.10103000,262.10961000,267.12179000,
      269.12791000,271.13393000,270.13336000,276.14846000,
      276.15159000,280.16131000,282.16912000,284.17416000,
      284.17873000,289.19042000,288.19274000,293.20449000,
      292.20746000,294.2130]