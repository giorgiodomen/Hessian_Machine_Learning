import scipy 
from scipy import constants
import numpy 
a_fun= lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((x1 - x2 - (-x2 + x3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), y1 - y2 - (-y2 + y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), z1 - z2 - (-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), -x3 + x4 - (-x2 + x3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), -y3 + y4 - (-y2 + y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), -z3 + z4 - (-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), -x2 + x3, -y2 + y3, -z2 + z3, ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2), ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))) 
a_derivs = [[lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)**2*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-x2 + x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(x2 - x3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)*(x2 - x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(y2 - y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(z2 - z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((x1 - x2)*(-x2 + x3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-x2 + x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)**2*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(x2 - x3)*(-y2 + y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)*(x2 - x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(y2 - y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(z2 - z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((x1 - x2)*(-x2 + x3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-x2 + x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)**2*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(x2 - x3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)*(x2 - x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(y2 - y3)*(-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)*(z2 - z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((x1 - x2)*(-x2 + x3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)**2*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)**2*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)*(-x3 + x4)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)**2*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)*(-x3 + x4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)**2*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(x2 - x3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)*(x2 - x3)*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(y2 - y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)*(-x3 + x4)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(y2 - y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(z2 - z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)*((-x2 + x3)*(-x3 + x4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)*(z2 - z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)**2*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)**2*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)*(-x3 + x4)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)**2*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)*(-x3 + x4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)**2*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(x2 - x3)*(-y2 + y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)*(x2 - x3)*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(y2 - y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)*(-x3 + x4)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(y2 - y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(z2 - z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)*((-x2 + x3)*(-x3 + x4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)*(z2 - z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)**2*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)*(-x3 + x4)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)**2*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)**2*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)*(-x3 + x4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)**2*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(x2 - x3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)*(x2 - x3)*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(y2 - y3)*(-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)*(-x3 + x4)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(y2 - y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)*(z2 - z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)*((-x2 + x3)*(-x3 + x4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)*(z2 - z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - ((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - 1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + 1)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (-1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (1), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-x2 + x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-x2 + x3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-x2 + x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-y2 + y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-z2 + z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)**2/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((x2 - x3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)*(x2 - x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x1 - x2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(y1 - y2)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((y2 - y3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(z1 - z2)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((z2 - z3)*((x1 - x2)*(-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y1 - y2)*(-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (z1 - z2)*(-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((x1 - x2)*(-x2 + x3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (y1 - y2)*(-y2 + y3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)*(-z2 + z3)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (z1 - z2)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-x2 + x3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)**2*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x2 + x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-y2 + y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)*(-x3 + x4)*(-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)**2*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-z2 + z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)*(-x3 + x4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)**2*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((x2 - x3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)*(x2 - x3)*(-x3 + x4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-x2 + x3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (x2 - x3)*(-y2 + y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (x2 - x3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((y2 - y3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)*(-x3 + x4)*(y2 - y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(y2 - y3)*(-y3 + y4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-y2 + y3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (y2 - y3)*(-z2 + z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((z2 - z3)*((-x2 + x3)*(-x3 + x4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-y2 + y3)*(-y3 + y4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z2 + z3)*(-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + ((-x2 + x3)*(-x3 + x4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-y2 + y3)*(-y3 + y4)*(z2 - z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) + (-z2 + z3)*(z2 - z3)*(-z3 + z4)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)**(3/2) - (-z2 + z3)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2) + (-z3 + z4)/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))/numpy.sqrt((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-x2 + x3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-y2 + y3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4: ((-z2 + z3)/((-x2 + x3)**2 + (-y2 + y3)**2 + (-z2 + z3)**2))]] 
 
grad_deriv= [[lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*x1**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*x1*x2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*x1*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*x1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*x2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*x1*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*y1**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*y1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*y1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*x1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*y1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-3*z1**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*z1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - z2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*x1**2*(1 - A)/(x1**2 + y1**2 + z1**2)**2 + (1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*x1 + x2*(1 - A))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x1*y1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*x1 + x2*(1 - A))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x1*z1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*x1 + x2*(1 - A))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (1 - A)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (2*B*x2**2/(x2**2 + y2**2 + z2**2)**2 - B/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*x1 + x2*(1 - A))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*x2*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - y1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*x1 + x2*(1 - A))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*x2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*x1 + x2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*x1 + x2*(1 - A))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*x2/(x2**2 + y2**2 + z2**2) + x1*(1 - A)/(x1**2 + y1**2 + z1**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x1*y1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*y1 + y2*(1 - A))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*y1**2*(1 - A)/(x1**2 + y1**2 + z1**2)**2 + (1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*y1 + y2*(1 - A))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*y1*z1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*y1 + y2*(1 - A))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*x2*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - x1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*y1 + y2*(1 - A))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (1 - A)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (2*B*y2**2/(x2**2 + y2**2 + z2**2)**2 - B/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*y1 + y2*(1 - A))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*y2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*y1 + y2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*y1 + y2*(1 - A))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*y2/(x2**2 + y2**2 + z2**2) + y1*(1 - A)/(x1**2 + y1**2 + z1**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x1*z1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*z1 + z2*(1 - A))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*y1*z1*(1 - A)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*z1 + z2*(1 - A))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*z1**2*(1 - A)/(x1**2 + y1**2 + z1**2)**2 + (1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*z1 + z2*(1 - A))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*x2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - x1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*z1 + z2*(1 - A))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-2*B*y2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - y1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (-B*z1 + z2*(1 - A))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(-B*z1 + z2*(1 - A))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (1 - A)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (2*B*z2**2/(x2**2 + y2**2 + z2**2)**2 - B/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (-B*z1 + z2*(1 - A))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-B*z2/(x2**2 + y2**2 + z2**2) + z1*(1 - A)/(x1**2 + y1**2 + z1**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (B + 1)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*A*x1**2/(x1**2 + y1**2 + z1**2)**2 + A/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*x2 + x1*(B + 1))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*x1*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*x2 + x1*(B + 1))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*x1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*x2 + x1*(B + 1))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - (-2*x2**2*(B + 1)/(x2**2 + y2**2 + z2**2)**2 + (B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*x2 + x1*(B + 1))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x2*y2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - y1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*x2 + x1*(B + 1))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x2*z2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*x2 + x1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*x2 + x1*(B + 1))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*x1/(x1**2 + y1**2 + z1**2) + x2*(B + 1)/(x2**2 + y2**2 + z2**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*x1*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*y2 + y1*(B + 1))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (B + 1)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*A*y1**2/(x1**2 + y1**2 + z1**2)**2 + A/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*y2 + y1*(B + 1))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*y1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*y2 + y1*(B + 1))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*x2*y2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - x2*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*y2 + y1*(B + 1))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - (-2*y2**2*(B + 1)/(x2**2 + y2**2 + z2**2)**2 + (B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*y2 + y1*(B + 1))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*y2*z2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*y2 + y1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*y2 + y1*(B + 1))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*y1/(x1**2 + y1**2 + z1**2) + y2*(B + 1)/(x2**2 + y2**2 + z2**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*x1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*z2 + z1*(B + 1))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*A*y1*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(5/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*z2 + z1*(B + 1))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (B + 1)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (-2*A*z1**2/(x1**2 + y1**2 + z1**2)**2 + A/(x1**2 + y1**2 + z1**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*z2 + z1*(B + 1))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*x2*z2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - x2*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*z2 + z1*(B + 1))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + 2*y2*z2*(B + 1)*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - y2*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (A*z2 + z1*(B + 1))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(A*z2 + z1*(B + 1))/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - (-2*z2**2*(B + 1)/(x2**2 + y2**2 + z2**2)**2 + (B + 1)/(x2**2 + y2**2 + z2**2))*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + (A*z2 + z1*(B + 1))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - (A*z1/(x1**2 + y1**2 + z1**2) + z2*(B + 1)/(x2**2 + y2**2 + z2**2))*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*x2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*y1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x2*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*x1*x2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 3*x2**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + x2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*x2*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + x2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - x1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + x2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*x2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + x2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y2*z1*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*y1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*x2*y2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - y1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*y1*y2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 3*y2**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + y2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - y1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + y2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*y2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + y2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - x1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - z1*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2*(-x1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + x2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - y1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - z1*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2*(-y1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + y2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - z1*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1**2 + y1**2 + z1**2)**(3/2)*(x2**2 + y2**2 + z2**2)**(3/2)) - z1*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2**2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + z2*(-z1*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)**2*(x2**2 + y2**2 + z2**2)) + z2*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + x2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*x2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2*(x1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - x2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + y2*z1/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - 3*y2*z2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) - z1*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) + z2*(y1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - y2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (2*z1*z2/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) - z1*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt(x2**2 + y2**2 + z2**2)) - 3*z2**2*(x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(5/2)) + z2*(z1*(x1*x2 + y1*y2 + z1*z2)/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)) - z2*(x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**2))*(x1*x2 + y1*y2 + z1*z2)/((1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))**(3/2)*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2)) + (x1*x2 + y1*y2 + z1*z2)/(numpy.sqrt(1 - (x1*x2 + y1*y2 + z1*z2)**2/((x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)))*numpy.sqrt(x1**2 + y1**2 + z1**2)*(x2**2 + y2**2 + z2**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)]] 
 
grad_deriv_1= [[lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + z1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*x2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*y2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*z2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + y1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*x2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*y2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*z2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + z1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*x2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*y2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-B*z2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - x3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + x3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + y3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) - (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)]] 
 
grad_deriv_2= [[lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + z1*(1 - A)*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*x2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*y2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*z2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + y1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(1 - A)*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*x2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*y2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*z2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + z1*(1 - A)*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*x2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*y2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (B*z2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-B/numpy.sqrt(x2**2 + y2**2 + z2**2) - (1 - A)/numpy.sqrt(x1**2 + y1**2 + z1**2))*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + z3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(x1*z3 - x3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - x3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(B + 1)*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((x1*z3 - x3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - y3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + x3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(-x1*y3 + x3*y1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(B + 1)*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-x1*y3 + x3*y1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*x1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*y1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - z3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (A*z1*(-y1*z3 + y3*z1)/((x1**2 + y1**2 + z1**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) + y3*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z2*(B + 1)*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1*(-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))/numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2) + (-A/numpy.sqrt(x1**2 + y1**2 + z1**2) + (B + 1)/numpy.sqrt(x2**2 + y2**2 + z2**2))*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2)), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)/(numpy.sqrt(x1**2 + y1**2 + z1**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: ((-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)))], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x1*z3 - x3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x1*z3 - x3*z1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(x1*z3 - x3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x1*z3 - x3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(x1*z3 - x3*z1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x1*z3 - x3*z1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x1*y3 + x3*y1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-x3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x1*y3 + x3*y1)*(-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)*(x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(-x1*y3 + x3*y1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x1*y3 + x3*y1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x1*y3 + x3*y1)*(x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-x1*y3 + x3*y1)*(-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)], [lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)*(y3*(-x1*y3 + x3*y1) - z3*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x3*(-x1*y3 + x3*y1) + z3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-y3/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x3*(x1*z3 - x3*z1) - y3*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (x2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (z2*(-y1*z3 + y3*z1)/((x2**2 + y2**2 + z2**2)**(3/2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-(-y1*z3 + y3*z1)*(-y1*(-x1*y3 + x3*y1) + z1*(x1*z3 - x3*z1))/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (-z1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (x1*(-x1*y3 + x3*y1) - z1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (y1/(numpy.sqrt(x2**2 + y2**2 + z2**2)*numpy.sqrt((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)) - (-x1*(x1*z3 - x3*z1) + y1*(-y1*z3 + y3*z1))*(-y1*z3 + y3*z1)/(numpy.sqrt(x2**2 + y2**2 + z2**2)*((-x1*y3 + x3*y1)**2 + (x1*z3 - x3*z1)**2 + (-y1*z3 + y3*z1)**2)**(3/2))), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0), lambda x1,y1,z1,x2,y2,z2,x3,y3,z3,A,B: (0)]] 
 
